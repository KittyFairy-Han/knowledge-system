(window.webpackJsonp=window.webpackJsonp||[]).push([[103],{494:function(t,s,e){"use strict";e.r(s);var a=e(14),r=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"vite"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vite"}},[t._v("#")]),t._v(" vite")]),t._v(" "),s("h2",{attrs:{id:"vite-热更新原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vite-热更新原理"}},[t._v("#")]),t._v(" vite 热更新原理")]),t._v(" "),s("ol",[s("li",[t._v("Vite 本地启动时会创建一个 WebSocket 连接，同时去监听本地的文件变化")]),t._v(" "),s("li",[t._v("当用户修改了本地的文件时，WebSocket 的服务端会拿到变化的文件的 ID 或者其他标识，并推送给客户端")]),t._v(" "),s("li",[t._v("客户端获取到变化的文件信息之后，便去请求最新的文件并刷新页面")])]),t._v(" "),s("h2",{attrs:{id:"考点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#考点"}},[t._v("#")]),t._v(" 考点")]),t._v(" "),s("h3",{attrs:{id:"为什么不同环境不同工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么不同环境不同工具"}},[t._v("#")]),t._v(" 为什么不同环境不同工具")]),t._v(" "),s("p",[t._v("基于 esbuild 和 rollup")]),t._v(" "),s("ul",[s("li",[t._v("开发时，更追求快速构建。")]),t._v(" "),s("li",[t._v("生成时，更追求运行快，那么构建的包就得小。\nVite 选择在不同环境中使用不同的工具，是为了在开发效率和生产效率之间找到一个平衡。sbuild 的快速编译是以牺牲一些代码优化为代价的，因此，esbuild 生成的代码可能不如其他工具生成的代码那么小或者那么高效。Rollup 是一个非常强大的打包工具，它对 ES Modules 的支持非常好，可以有效地实现 tree-shaking，生成更小的代码。因此，Vite 在生产环境中选择使用 Rollup 进行打包和优化。")])]),t._v(" "),s("h3",{attrs:{id:"开发环境是-esm-如何处理-commonjs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#开发环境是-esm-如何处理-commonjs"}},[t._v("#")]),t._v(" 开发环境是 esm，如何处理 commonjs")]),t._v(" "),s("p",[t._v("esbuild 的 transformer")]),t._v(" "),s("h3",{attrs:{id:"生产环境用rollup-对代码进行了怎样的转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#生产环境用rollup-对代码进行了怎样的转换"}},[t._v("#")]),t._v(" 生产环境用rollup，对代码进行了怎样的转换")])])}),[],!1,null,null,null);s.default=r.exports}}]);