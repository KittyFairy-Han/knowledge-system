(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{398:function(t,a,s){t.exports=s.p+"assets/img/model-viewer_poster.7ad93e87.png"},469:function(t,a,s){"use strict";s.r(a);var e=s(42),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"_3d-渲染相关的基础概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3d-渲染相关的基础概念"}},[t._v("#")]),t._v(" 3d 渲染相关的基础概念")]),t._v(" "),e("p",[t._v("如果不了解材质、纹理这些基本概念，下面的材质纹理部分可能会比较懵。在这里简单介绍一下：")]),t._v(" "),e("ul",[e("li",[t._v("材质(Material):是表现光照效果的一个数据集")]),t._v(" "),e("li",[t._v("纹理(Texture):应用到物体上的样式")]),t._v(" "),e("li",[t._v("着色器(Shader):本质上是程序代码，根据光照、材质来计算最后映射到每个像素的颜色,这个颜色来源于纹理。可以把材质和纹理都理解为着色器要用的一个素材。")]),t._v(" "),e("li",[t._v("变体(Variant):很多时候，效果不同，但 shader 代码差异较小。这个时候 shader 就会有多个分身，变体就可以理解为分身。")])]),t._v(" "),e("h2",{attrs:{id:"model-viewer-核心概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#model-viewer-核心概念"}},[t._v("#")]),t._v(" model-viewer 核心概念")]),t._v(" "),e("p",[t._v("model-viewer 的能力大致分为："),e("strong",[t._v("控制相机、设置环境与光线、控制模型动画、设置材质纹理、XR(AR+VR)、导出模型")]),t._v("这几个大部分。"),e("br"),t._v("\nmodel-viewer 对外的几个核心概念：")]),t._v(" "),e("ul",[e("li",[e("p",[e("strong",[t._v("attributes")]),t._v(", 是指 html 标签内联的属性,可读写,例如 auto-rotate。(下面的例子可以区分 attributes 与 properties)")])]),t._v(" "),e("li",[e("p",[e("strong",[t._v("properties")]),t._v(", 字面意思看也是属性,不能通过内联形式去设置,只能读取例如 turntableRotation ：")])])]),t._v(" "),e("div",{staticClass:"language-html extra-class"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("model-viewer")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("auto-rotate")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("my-ar-mv"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("model-viewer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" modelViewer "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my-ar-mv"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//modelViewer.autoRotate = true 为 attribute 写入的另一种方式")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("modelViewer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("autoRotate"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//attribute 读取")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("modelViewer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("turntableRotation"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//开启自动旋转后,可以通过这个property,获取模型自转的角度(逆时针)")]),t._v("\n")])])]),e("blockquote",[e("p",[t._v("下文的 modelViewer 都是指 model-viewer 对应的 node 节点")])]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("methods")]),t._v(", 方法有通过 modelViewer 调用的,也有通过 modelViewer.model 调用的,或更深层的属性比如材质去调用的。")]),t._v(" "),e("li",[e("strong",[t._v("events")]),t._v(", 监听事件 绑定在 modelViewer 上。")]),t._v(" "),e("li",[e("strong",[t._v("slots")]),t._v(", 通常用在跟随模型的可交互的标记点。")])]),t._v(" "),e("h2",{attrs:{id:"model-viewer-基本使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#model-viewer-基本使用"}},[t._v("#")]),t._v(" model-viewer 基本使用")]),t._v(" "),e("p",[t._v("model-viewer 的文档对新手来说可读性和引导性一般,在做项目的时候去查文档效率比较低,有时会因为实现一个效果反复的试错。所以我才会写这一 Part。")]),t._v(" "),e("h3",{attrs:{id:"控制相机"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#控制相机"}},[t._v("#")]),t._v(" 控制相机")]),t._v(" "),e("ul",[e("li",[t._v("camera-controls 开启用户交互：旋转和缩放")]),t._v(" "),e("li",[t._v("enable-pan 开启交互：位移")]),t._v(" "),e("li",[t._v("disable-zoom 关闭缩放的交互")]),t._v(" "),e("li",[t._v("custom-prompt 自定义操作")])]),t._v(" "),e("p",[t._v("自动旋转与交互手势旋转可以同时用")]),t._v(" "),e("ul",[e("li",[t._v("auto-rotate 自动旋转")]),t._v(" "),e("li",[t._v("auto-rotate-delay 自动旋转")]),t._v(" "),e("li",[t._v("camera-orbit 设置 0~3.5m 生效,大于 3.5m 不生效")])]),t._v(" "),e("h3",{attrs:{id:"环境光"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#环境光"}},[t._v("#")]),t._v(" 环境光")]),t._v(" "),e("ul",[e("li",[t._v("skybox-image 应用背景并模拟出环境光")]),t._v(" "),e("li",[t._v("environment-image 环境光但不应用于背景,通过配置一个图片去计算出环境光,不设置也有一个默认的环境光,另外有个内置的值 neutral,\n可以同时使用\n环境图像应该不超过 1k (1024x512),因为它们在内部被固定到这个分辨率。")]),t._v(" "),e("li",[t._v("exposure 曝光度\n这些表现和模型表面的粗糙度有关系可以查看"),e("a",{attrs:{href:"https://modelviewer.dev/examples/lightingandenv/#anotherHDRExample",target:"_blank",rel:"noopener noreferrer"}},[t._v("这个例子"),e("OutboundLink")],1)])]),t._v(" "),e("h3",{attrs:{id:"动画-针对内置了动画的模型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#动画-针对内置了动画的模型"}},[t._v("#")]),t._v(" 动画(针对内置了动画的模型)")]),t._v(" "),e("ul",[e("li",[t._v("animationName 通过动画名称控制模型现在播放的动画,播放的同时改变动画时,它们会交叉淡出")]),t._v(" "),e("li",[t._v("autoplay 自动播放所有的动画,顺序就按内置的来")]),t._v(" "),e("li",[t._v("animation-crossfade-duration 交叉变换的时间")]),t._v(" "),e("li",[t._v("modelViewer.play() 函数主动触发播放函数\nanimationName 配合 autoplay 或者 modelViewer.play()使用时才会播放动画,否则动画处于暂停状态,会显示第一帧")])]),t._v(" "),e("h3",{attrs:{id:"模型变换"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#模型变换"}},[t._v("#")]),t._v(" 模型变换")]),t._v(" "),e("blockquote",[e("p",[t._v("模型变换和相机变换不一样")])]),t._v(" "),e("ul",[e("li",[t._v("availableVariants 只读属性,读取模型变体")]),t._v(" "),e("li",[t._v("variantName 变体名称")]),t._v(" "),e("li",[t._v("orientation 模型旋转")]),t._v(" "),e("li",[t._v("scale 模型缩放")]),t._v(" "),e("li",[t._v("updateFraming() 模型加载后改变 orientation 和 scale 需要调用这个方法,才生效。")])]),t._v(" "),e("h3",{attrs:{id:"材质和纹理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#材质和纹理"}},[t._v("#")]),t._v(" 材质和纹理")]),t._v(" "),e("ul",[e("li",[t._v("modelviewer.model.getMaterialByName() - 获取材质常用方法")]),t._v(" "),e("li",[t._v("modelviewer.createTexture() -创建纹理")]),t._v(" "),e("li",[t._v("material[xxx].setMetallicFactor() - 设置材质的金属程度")]),t._v(" "),e("li",[t._v("material[xxx].setRoughnessFactor() - 设置材质的粗糙程度")])]),t._v(" "),e("h3",{attrs:{id:"导出模型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#导出模型"}},[t._v("#")]),t._v(" 导出模型")]),t._v(" "),e("p",[t._v("主要依赖这个方法：")]),t._v(" "),e("ul",[e("li",[t._v("exportScene()\n"),e("a",{attrs:{href:"https://modelviewer.dev/examples/scenegraph/#pickMaterialExample",target:"_blank",rel:"noopener noreferrer"}},[t._v("例子"),e("OutboundLink")],1)])]),t._v(" "),e("h2",{attrs:{id:"使用经验分享"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用经验分享"}},[t._v("#")]),t._v(" 使用经验分享")]),t._v(" "),e("p",[t._v("上面对 model-viewer 已经有了基础的认知，下面介绍一下我在工作中的一些使用经验。")]),t._v(" "),e("h3",{attrs:{id:"内容替换"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#内容替换"}},[t._v("#")]),t._v(" 内容替换")]),t._v(" "),e("h4",{attrs:{id:"需求"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#需求"}},[t._v("#")]),t._v(" 需求")]),t._v(" "),e("p",[t._v("需要实现的需求大概是：展示一个 3d 旋转的相框，相框是固定的，相框上的相片是动态数据。")]),t._v(" "),e("h4",{attrs:{id:"思路"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#思路"}},[t._v("#")]),t._v(" 思路")]),t._v(" "),e("p",[t._v("有了上面对模型材质、纹理概念的了解，就很容易想到把相片作为 texture，根据动态的数据去替换 material 上的 texture 即可。不就是")]),t._v(" "),e("ol",[e("li",[t._v("创建纹理 const t = modelViewer.createTexture('xxx.jpg')")]),t._v(" "),e("li",[t._v("找到对应的材质，然后设置纹理 material[channel].setTexture(t)\n嘛~好简单呐~但真的实践起来就会发现纸上谈兵真容易哈哈哈...")])]),t._v(" "),e("h4",{attrs:{id:"实践"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实践"}},[t._v("#")]),t._v(" 实践")]),t._v(" "),e("p",[t._v("(均为思路讲解代码，无法直接使用)")]),t._v(" "),e("ul",[e("li",[t._v("迈坑一"),e("br"),t._v("\n这里有个比较麻烦的点就是不知道 setTexture 要用谁去调用，那要怎么确定呢？"),e("br"),t._v("\n方案 ① 提供模型的人要给出一个具体的材质名，和具体的属性路径，如材质名是 Center，属性路径为.pbrMetallicRoughness.baseColorTexture。"),e("br"),t._v("\n方案 ② 和提供模型的人商量一个标志位，让 ta 把要替换的纹理名称作为标志，开发时去 json 文件里去找到这个标志位，属性路径也就一目了然了。")])]),t._v(" "),e("div",{staticClass:"language-html extra-class"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("model-viewer")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("xxx.gltf"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("auto-rotate")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("camera-controls")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("model-viewer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" targetMaterial "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" modelViewer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("model"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("materials"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("material")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" material"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//找到材质")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" targetTexture "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" modelViewer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("createTexture")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xxx.jpg"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用图片创建纹理")]),t._v("\ntargetMaterial"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pbrMetallicRoughness"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("baseColorTexture"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTexture")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("targetTexture"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("迈坑二:需要注意的是，要在 modelViewer loaded 之后再去进行上面的步骤，加个事件监听的逻辑。")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("modelViewer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"load"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//上面的替换逻辑")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("迈坑三:如果要替换的位置本身就有了纹理图片，我们的替换操作可能失败。原因不确定，通过现象推断应该是个 bug，模型已有的纹理图片和我们设置的纹理图片哪个加载的慢，哪个就是最终展示出来的纹理。我当时采用的方法是，让提供模型的人不要设置默认的纹理图片，只设置颜色。曲线解决了问题。")]),t._v(" "),e("p",[t._v("终于可以愉快的实现这个功能辣~"),e("a",{attrs:{href:"https://codesandbox.io/s/cranky-mopsa-qg5jhr?file=/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("这是一个完整示例-1"),e("OutboundLink")],1)]),t._v(" "),e("h3",{attrs:{id:"白底优化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#白底优化"}},[t._v("#")]),t._v(" 白底优化")]),t._v(" "),e("h4",{attrs:{id:"发现问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#发现问题"}},[t._v("#")]),t._v(" 发现问题")]),t._v(" "),e("p",[t._v("发现模型加载的过程中有白底，这种体验不太好，当页面的背景不是白色的时候会很违和。")]),t._v(" "),e("h4",{attrs:{id:"解决思路"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解决思路"}},[t._v("#")]),t._v(" 解决思路")]),t._v(" "),e("p",[t._v("可能很多人第一反应和我一样就是给 model-viewer 背景颜色设置成透明的，设置了之后发现模型加载结束后这个背景颜色是生效的，但是加载过程中还是白的。（体验一下上面的例子就可以发现）"),e("br"),t._v("\n有了上面对基本使用的了解，就可以马上联想到既然是加载过程中的，那应该和 poster 这个 attr 有关。官方"),e("a",{attrs:{href:"https://modelviewer.dev/examples/loading/#displayPoster",target:"_blank",rel:"noopener noreferrer"}},[t._v("在这个 example 中"),e("OutboundLink")],1),t._v("确实提到了，看起来就是")]),t._v(" "),e("ol",[e("li",[t._v("配置 model-viewer 的 poster 属性")]),t._v(" "),e("li",[t._v("css 里面写上 model-viewer{--poster-color: transparent;} 就行了。")])]),t._v(" "),e("p",[t._v("这次没有坑了~顺顺利利设置成功~"),e("a",{attrs:{href:"https://codesandbox.io/s/cranky-mopsa-qg5jhr?file=/poster-color.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("基于上面的完整示例-1 改进版"),e("OutboundLink")],1),t._v("可能比官方例子看起来更明显一些。")]),t._v(" "),e("h4",{attrs:{id:"原因"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#原因"}},[t._v("#")]),t._v(" 原因")]),t._v(" "),e("p",[t._v("model-viewer 在模型加载之前会有一个海报占位区域,本质上是一个 background-color 为白色的 button。"),e("br"),t._v(" "),e("img",{attrs:{src:s(398),alt:"dom结构"}}),e("br"),t._v("\n配置了 poster 后,这个 button 的 background-image 就是 poster。如果 poster 有透明的部分, 那么白色的 background-color 还是会露出来。所以要从根本解决问题不仅要配置 poster 还得把 background-color 改为透明的。"),e("br"),t._v("\n设置 background-color 就用上面的 css 变量方法，其实 poster 的配置也可以通过 css 变量的方式，可以查看"),e("a",{attrs:{href:"https://codesandbox.io/s/cranky-mopsa-qg5jhr?file=/poster-color.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("完整示例-1 改进版"),e("OutboundLink")],1),t._v("中 css 部分被注释的代码。")]),t._v(" "),e("h4",{attrs:{id:"继续思考"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#继续思考"}},[t._v("#")]),t._v(" 继续思考")]),t._v(" "),e("ul",[e("li",[t._v("一问：这中方式行不行呢？")])]),t._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token selector"}},[t._v("model-viewer #default-poster")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" transparent"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("ul",[e("li",[t._v("二问：答案肯定是不行辣，为啥妮？"),e("br"),t._v("\n因为 model-viewer 基于 web components 实现的,web components 的 shadowRoot 里面元素的样式通过外部是无法修改的,选择器选不到内部元素。")])]),t._v(" "),e("blockquote",[e("p",[t._v("MDN 上的解释：Web Components 是一套不同的技术,允许您创建可重用的定制元素（它们的功能封装在您的代码之外）并且在您的 web 应用中使用它们。简而言之就是自定义的 html 标签。")])]),t._v(" "),e("ul",[e("li",[t._v("三问：怎么修改 shadowRoot 内部的样式？\n通过插 style 标签到 shadowRoot 内部去设置样式。如：")])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" styleStr "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("\n#default-poster {\n  background-color: transparent;\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-image: none;\n  height: 102%;\n}")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" styleTag "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"style"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nstyleTag"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("textContent "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" styleStr"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" shadow "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" modelViewer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("shadowRoot"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nshadow"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("styleTag"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h3",{attrs:{id:"一些其他避坑指南"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一些其他避坑指南"}},[t._v("#")]),t._v(" 一些其他避坑指南")]),t._v(" "),e("ul",[e("li",[t._v("不启用某个属性,就不写这个属性,拿位移举个例子位移。")])]),t._v(" "),e("div",{staticClass:"language-jsx extra-class"},[e("pre",{pre:!0,attrs:{class:"language-jsx"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 特别要注意的是这种写法还是会启动这个属性")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("model-viewer")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("enable-pan")]),e("span",{pre:!0,attrs:{class:"token script language-javascript"}},[e("span",{pre:!0,attrs:{class:"token script-punctuation punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 正确写法")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("model-viewer")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])]),e("ul",[e("li",[t._v("onload事件\n模型的加载不是 model-viewer 这个 dom 节点的 onload 事件,模型加载完成是一定晚于 onload 事件的。"),e("br"),t._v("\n我们上面用的 onload 事件都是 dom 节点上的。"),e("br"),t._v("\nmodel-viewer没有提供模型加载的钩子,所以业务页面无法监听到模型加载完成事件。")])])])}),[],!1,null,null,null);a.default=n.exports}}]);