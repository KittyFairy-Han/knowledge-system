(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{383:function(t,v,_){"use strict";_.r(v);var e=_(42),r=Object(e.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"数据类型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[t._v("#")]),t._v(" 数据类型")]),t._v(" "),_("p",[t._v("Number（包括 NaN）、String、Boolean、复合类型（Array 、Object 、Function、null） 、undefined")]),t._v(" "),_("h2",{attrs:{id:"判断数据类型的方法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#判断数据类型的方法"}},[t._v("#")]),t._v(" 判断数据类型的方法")]),t._v(" "),_("h3",{attrs:{id:"typeof-运算符"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#typeof-运算符"}},[t._v("#")]),t._v(" typeof 运算符")]),t._v(" "),_("ul",[_("li",[t._v("用法: typeof A")]),t._v(" "),_("li",[t._v("返回值: String")])]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("测试值")]),t._v(" "),_("th",[t._v("返回值")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("Number")]),t._v(" "),_("td",[t._v('"number"')])]),t._v(" "),_("tr",[_("td",[t._v("String")]),t._v(" "),_("td",[t._v('"string"')])]),t._v(" "),_("tr",[_("td",[t._v("Boolean")]),t._v(" "),_("td",[t._v('"boolean"')])]),t._v(" "),_("tr",[_("td",[t._v("Symbol")]),t._v(" "),_("td",[t._v('"symbol"')])]),t._v(" "),_("tr",[_("td",[t._v("Object(包含 Set Map Date Math 等)")]),t._v(" "),_("td",[t._v('"object"')])]),t._v(" "),_("tr",[_("td",[t._v("Array")]),t._v(" "),_("td",[t._v('"object"')])]),t._v(" "),_("tr",[_("td",[t._v("null")]),t._v(" "),_("td",[t._v('"object"')])]),t._v(" "),_("tr",[_("td",[t._v("Function")]),t._v(" "),_("td",[t._v('"function"')])]),t._v(" "),_("tr",[_("td",[t._v("undefined")]),t._v(" "),_("td",[t._v('"undefined"')])])])]),t._v(" "),_("h3",{attrs:{id:"instanceof-运算符"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#instanceof-运算符"}},[t._v("#")]),t._v(" instanceof 运算符")]),t._v(" "),_("ul",[_("li",[t._v("用法: A instanceof B\n用来判断 A 是否在 B 的原型链上 , 所以只对复合类型有效")]),t._v(" "),_("li",[t._v("返回值: trule/false")])]),t._v(" "),_("h3",{attrs:{id:"object-prototype-tostring-函数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#object-prototype-tostring-函数"}},[t._v("#")]),t._v(" Object.prototype.toString() 函数")]),t._v(" "),_("ul",[_("li",[t._v("用法: Object.prototype.toString.call(A)")]),t._v(" "),_("li",[t._v("返回值: String")])]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("测试值")]),t._v(" "),_("th",[t._v("返回值")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("Number")]),t._v(" "),_("td",[t._v('"[object Number]"')])]),t._v(" "),_("tr",[_("td",[t._v("String")]),t._v(" "),_("td",[t._v('"[object String]"')])]),t._v(" "),_("tr",[_("td",[t._v("Boolean")]),t._v(" "),_("td",[t._v('"[object Boolean]"')])]),t._v(" "),_("tr",[_("td",[t._v("Symbol")]),t._v(" "),_("td",[t._v('"[object Symbol]"')])]),t._v(" "),_("tr",[_("td",[t._v("Object")]),t._v(" "),_("td",[t._v('"[object Object]"')])]),t._v(" "),_("tr",[_("td",[t._v("Array")]),t._v(" "),_("td",[t._v('"[object Array]"')])]),t._v(" "),_("tr",[_("td",[t._v("null")]),t._v(" "),_("td",[t._v('"[object Null]"')])]),t._v(" "),_("tr",[_("td",[t._v("Function")]),t._v(" "),_("td",[t._v('"[object Function]"')])]),t._v(" "),_("tr",[_("td",[t._v("undefined")]),t._v(" "),_("td",[t._v('"[object Undefined]"')])]),t._v(" "),_("tr",[_("td",[t._v("Error")]),t._v(" "),_("td",[t._v('"[object Error]"')])]),t._v(" "),_("tr",[_("td",[t._v("Math")]),t._v(" "),_("td",[t._v('"[object Math]"')])]),t._v(" "),_("tr",[_("td",[t._v("Date")]),t._v(" "),_("td",[t._v('"[object Date]"')])]),t._v(" "),_("tr",[_("td",[t._v("Set")]),t._v(" "),_("td",[t._v('"[object Set]"')])]),t._v(" "),_("tr",[_("td",[t._v("Map")]),t._v(" "),_("td",[t._v('"[object Map]"')])]),t._v(" "),_("tr",[_("td",[t._v("正则")]),t._v(" "),_("td",[t._v('"[object RegExp]"')])])])]),t._v(" "),_("h2",{attrs:{id:"类型转换"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#类型转换"}},[t._v("#")]),t._v(" 类型转换")]),t._v(" "),_("ul",[_("li",[t._v("数据类型转换的原理是 toString() 和 valueOf()\n"),_("blockquote",[_("p",[t._v("undefined 和 null 不能直接调用这两个方法")])])])]),t._v(" "),_("h3",{attrs:{id:"自动转换"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#自动转换"}},[t._v("#")]),t._v(" 自动转换")]),t._v(" "),_("ul",[_("li",[t._v("——> Boolean:\n条件语句、三元运算、非运算")]),t._v(" "),_("li",[t._v("——> String:\n字符串与其他类型用 “+” 连接时")]),t._v(" "),_("li",[t._v("——> Number:\n除了以上的运算方式，其他运算方式如 + - * / == 等，都会转换为数字类型进行计算")])]),t._v(" "),_("h3",{attrs:{id:"强制转换"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#强制转换"}},[t._v("#")]),t._v(" 强制转换")]),t._v(" "),_("ul",[_("li",[t._v("——> Number:\nNumber()")]),t._v(" "),_("li",[t._v("——> String:\nString()")]),t._v(" "),_("li",[t._v("——> Boolean:\nBoolean()")])]),t._v(" "),_("h2",{attrs:{id:"写正则表达式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#写正则表达式"}},[t._v("#")]),t._v(" 写正则表达式")]),t._v(" "),_("ol",[_("li",[t._v("用正则表达式匹配字符串，以字母开头，后面是数字、字符串或者下划线，长度为 9-20")])]),t._v(" "),_("div",{staticClass:"language-js extra-class"},[_("pre",{pre:!0,attrs:{class:"language-js"}},[_("code",[_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^[a-zA-Z][a-zA-Z0-9_]{8,19}$"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])}),[],!1,null,null,null);v.default=r.exports}}]);