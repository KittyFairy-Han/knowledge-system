(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{319:function(t,a,r){t.exports=r.p+"assets/img/browser-parts.d0be64b9.png"},485:function(t,a,r){"use strict";r.r(a);var s=r(14),v=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"浏览器工作原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器工作原理"}},[t._v("#")]),t._v(" 浏览器工作原理")]),t._v(" "),a("h2",{attrs:{id:"浏览器的构成部分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器的构成部分"}},[t._v("#")]),t._v(" 浏览器的构成部分")]),t._v(" "),a("p",[a("img",{attrs:{src:r(319),alt:"浏览器的构成",title:"浏览器的构成"}})]),t._v(" "),a("h2",{attrs:{id:"从进程角度来理解浏览器工作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#从进程角度来理解浏览器工作"}},[t._v("#")]),t._v(" 从进程角度来理解浏览器工作")]),t._v(" "),a("h3",{attrs:{id:"包括的进程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#包括的进程"}},[t._v("#")]),t._v(" 包括的进程")]),t._v(" "),a("h4",{attrs:{id:"浏览器进程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器进程"}},[t._v("#")]),t._v(" 浏览器进程")]),t._v(" "),a("p",[t._v("浏览器的主线程，主要负责浏览器的页面管理、书签、前进后退、资源下载管理等，整个浏览器应用程序只有一个，对应上述浏览器组成中的浏览器引擎。")]),t._v(" "),a("h4",{attrs:{id:"渲染进程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#渲染进程"}},[t._v("#")]),t._v(" 渲染进程")]),t._v(" "),a("p",[t._v("内核进程，一个浏览器可以包含多个渲染进程，每个 Tab 窗口页对应一个渲染进程")]),t._v(" "),a("h4",{attrs:{id:"gpu-进程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gpu-进程"}},[t._v("#")]),t._v(" GPU 进程")]),t._v(" "),a("p",[t._v("负责 GPU 渲染，整个浏览器应用程序只有一个。")]),t._v(" "),a("h4",{attrs:{id:"插件进程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#插件进程"}},[t._v("#")]),t._v(" 插件进程")]),t._v(" "),a("p",[t._v("浏览器安装的插件(扩展程序)，每个插件会创建一个进程。")]),t._v(" "),a("h3",{attrs:{id:"多进程的优势"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多进程的优势"}},[t._v("#")]),t._v(" 多进程的优势")]),t._v(" "),a("ol",[a("li",[t._v("避免单个页面奔溃影响整个浏览器")]),t._v(" "),a("li",[t._v("避免第三方插件奔溃影响整个浏览器")]),t._v(" "),a("li",[t._v("充分利用多核优势")])]),t._v(" "),a("h2",{attrs:{id:"浏览器内核"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器内核"}},[t._v("#")]),t._v(" 浏览器内核")]),t._v(" "),a("ul",[a("li",[t._v("Trident：ie 内核")]),t._v(" "),a("li",[t._v("Gecko：ff 内核")]),t._v(" "),a("li",[t._v("webkit：Safari")]),t._v(" "),a("li",[t._v("Blink：（Chrome，operal，")]),t._v(" "),a("li",[t._v("Trident+webkit：QQ 浏览器")])]),t._v(" "),a("h2",{attrs:{id:"内核进程中的线程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内核进程中的线程"}},[t._v("#")]),t._v(" 内核进程中的线程")]),t._v(" "),a("p",[t._v("浏览器内核中有 3 个最主要的线程：主线程（JS 执行和 UI 渲染），事件处理线程。此外还有 http 网络线程，定时器任务线程，文件系统处理线程等等。")]),t._v(" "),a("h3",{attrs:{id:"js-执行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-执行"}},[t._v("#")]),t._v(" JS 执行")]),t._v(" "),a("p",[t._v("JS 线程负责 JS 代码解析编译执行，称为主线程。"),a("br"),t._v("\nJS 线程核心是 js 引擎 （IE9+: Chakra firefox:monkey chrome:v8）。"),a("br"),t._v("\nwebworker 可以创建多个 js 线程，但是受主线程控制，主要用于 cpu 密集型计算。"),a("br"),t._v("\n主线程执行同步任务，会阻塞 UI 渲染线程。")]),t._v(" "),a("h3",{attrs:{id:"ui-渲染"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ui-渲染"}},[t._v("#")]),t._v(" UI 渲染")]),t._v(" "),a("p",[t._v("UI 渲染线程当然是负责构建渲染树，执行页面元素渲染。"),a("br"),t._v("\n核心是渲染引擎（firefox：gecko、chrome/safari：webkit）"),a("br"),t._v("\n由于 JS 可以操作 DOM 元素处理样式等，JS 主线程是执行同步任务的，所以设计上 JS 引擎线程和 GUI 渲染线程是互斥的。 也就是说 JS 引擎处于运行状态时，GUI 渲染线程将处于冻结状态。")]),t._v(" "),a("h3",{attrs:{id:"线程与事件循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#线程与事件循环"}},[t._v("#")]),t._v(" 线程与事件循环")]),t._v(" "),a("p",[t._v("定时器线程、事件处理线程和网络线程都与事件循环机制密切相关。它们的工作方式如下：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("定时器线程：当我们设置一个定时器（如 setTimeout 或 setInterval）时，定时器线程会开始计时。当定时器到期时，定时器线程会将定时器的回调函数放入事件队列，等待主线程空闲时执行。")])]),t._v(" "),a("li",[a("p",[t._v("事件处理线程：当用户产生交互事件（如点击、滚动等）时，事件处理线程会将事件放入事件队列。主线程会在执行完当前任务后，检查事件队列并处理事件。")])]),t._v(" "),a("li",[a("p",[t._v("网络线程：当我们发起一个网络请求（如 fetch 或 XMLHttpRequest）时，网络线程会处理这个请求。当网络请求完成（或失败）时，网络线程会将网络请求的回调函数放入事件队列，等待主线程空闲时执行。")])]),t._v(" "),a("li",[a("p",[t._v("事件循环机制（可以认为运行在主线程中）：主线程会不断地从事件队列中取出任务并执行，这就是事件循环。当主线程执行完当前任务后，它会检查事件队列，如果队列中有任务，主线程就会取出任务并执行。如果队列中没有任务，主线程就会等待，直到队列中有任务为止。")])])]),t._v(" "),a("p",[t._v("这种设计使得浏览器可以在处理复杂的JavaScript和UI渲染任务的同时，也能处理用户交互事件、定时器任务和网络请求，从而提供流畅的用户体验。")])])}),[],!1,null,null,null);a.default=v.exports}}]);