(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{407:function(t,s,a){"use strict";a.r(s);var n=a(14),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"string-类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string-类型"}},[t._v("#")]),t._v(" String 类型")]),t._v(" "),s("h2",{attrs:{id:"属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[t._v("#")]),t._v(" 属性")]),t._v(" "),s("ul",[s("li",[t._v("String.prototype.length")])]),t._v(" "),s("h2",{attrs:{id:"相关方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#相关方法"}},[t._v("#")]),t._v(" 相关方法")]),t._v(" "),s("h3",{attrs:{id:"string"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string"}},[t._v("#")]),t._v(" String")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("转换前")]),t._v(" "),s("th",[t._v("转换后")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("undefined")]),t._v(" "),s("td",[t._v('"undefined"')])]),t._v(" "),s("tr",[s("td",[t._v("null")]),t._v(" "),s("td",[t._v('"null"')])]),t._v(" "),s("tr",[s("td",[t._v("Boolean")]),t._v(" "),s("td",[t._v('"true"/"false"')])]),t._v(" "),s("tr",[s("td",[t._v("Number(包括 NaN、±Infinity)")]),t._v(" "),s("td",[t._v('"原来的值"')])]),t._v(" "),s("tr",[s("td",[t._v("[]")]),t._v(" "),s("td",[t._v('""')])]),t._v(" "),s("tr",[s("td",[t._v("Array")]),t._v(" "),s("td",[t._v('脱掉方括号披上引号即"数组拍平后的值"')])]),t._v(" "),s("tr",[s("td",[t._v("Function")]),t._v(" "),s("td",[t._v('"函数代码"')])]),t._v(" "),s("tr",[s("td",[t._v("Object")]),t._v(" "),s("td",[t._v('"[Object,Object]"')])])])]),t._v(" "),s("h3",{attrs:{id:"静态方法-string"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#静态方法-string"}},[t._v("#")]),t._v(" 静态方法 String.")]),t._v(" "),s("h4",{attrs:{id:"fromcharcode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fromcharcode"}},[t._v("#")]),t._v(" fromCharCode()")]),t._v(" "),s("h4",{attrs:{id:"fromcodepoint"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fromcodepoint"}},[t._v("#")]),t._v(" fromCodePoint()")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" String"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromCharCode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" String"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromCodePoint")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"实例方法-string-prototype"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例方法-string-prototype"}},[t._v("#")]),t._v(" 实例方法 String.prototype.")]),t._v(" "),s("ul",[s("li",[t._v("String 实例方法都"),s("strong",[t._v("不改变")]),t._v("原来的字符串\n"),s("table",[s("thead",[s("tr",[s("th",[t._v("idx")]),t._v(" "),s("th",[t._v("how to use")]),t._v(" "),s("th",[t._v("arguments")]),t._v(" "),s("th",[t._v("return")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("1.")]),t._v(" "),s("td",[t._v("charAt")]),t._v(" "),s("td",[t._v("position")]),t._v(" "),s("td",[t._v("position 位置的字符 : String")])]),t._v(" "),s("tr",[s("td",[t._v("2.")]),t._v(" "),s("td",[t._v("charCodeAt")]),t._v(" "),s("td",[t._v("position")]),t._v(" "),s("td",[t._v("position 位置字符的 Unicode : Number")])]),t._v(" "),s("tr",[s("td",[t._v("3.")]),t._v(" "),s("td",[t._v("pointCodeAt")]),t._v(" "),s("td",[t._v("position")]),t._v(" "),s("td",[t._v("position 位置字符的 Unicode 编码点值的非负整数")])]),t._v(" "),s("tr",[s("td",[t._v("4.")]),t._v(" "),s("td",[t._v("indexOf")]),t._v(" "),s("td",[t._v("searchValue[, fromIndex]")]),t._v(" "),s("td",[t._v("从 fromIndex ——>找,首次匹配 searchValue 时的开始 position")])]),t._v(" "),s("tr",[s("td",[t._v("5.")]),t._v(" "),s("td",[t._v("lastIndexOf")]),t._v(" "),s("td",[t._v("searchValue[, fromIndex]")]),t._v(" "),s("td",[t._v("从 fromIndex **<——**找,首次匹配 searchValue 时的开始 position")])]),t._v(" "),s("tr",[s("td",[t._v("6.")]),t._v(" "),s("td",[t._v("search")]),t._v(" "),s("td",[t._v("searchString")]),t._v(" "),s("td",[t._v("regexp")])]),t._v(" "),s("tr",[s("td",[t._v("7.")]),t._v(" "),s("td",[t._v("match")]),t._v(" "),s("td",[t._v("regexp")]),t._v(" "),s("td",[t._v("匹配，规则复杂看官方技术文档。返回 :position")])]),t._v(" "),s("tr",[s("td",[t._v("08.")]),t._v(" "),s("td",[t._v("matchAll")]),t._v(" "),s("td",[t._v("regexp")]),t._v(" "),s("td",[t._v("匹配所有，规则复杂看官方技术文档。返回 :Iterator")])]),t._v(" "),s("tr",[s("td",[t._v("09.")]),t._v(" "),s("td",[t._v("slice")]),t._v(" "),s("td",[t._v("[beginIndex, endIndex]")]),t._v(" "),s("td",[t._v("截取 str 从 beginIndex 到 endIndex 之间的字符串,左闭右开")])]),t._v(" "),s("tr",[s("td",[t._v("10.")]),t._v(" "),s("td",[t._v("substring")]),t._v(" "),s("td",[t._v("[startIndex, endIndex]")]),t._v(" "),s("td",[t._v("截取 str 从 startIndex 到 endIndex 之间的字符串,左闭右开")])]),t._v(" "),s("tr",[s("td",[t._v("11.")]),t._v(" "),s("td",[t._v("replace")]),t._v(" "),s("td",[t._v("regexp")]),t._v(" "),s("td",[t._v("substr, newSubStr")])]),t._v(" "),s("tr",[s("td",[t._v("12.")]),t._v(" "),s("td",[t._v("trim")]),t._v(" "),s("td"),t._v(" "),s("td",[t._v("去掉两边空格 :String")])]),t._v(" "),s("tr",[s("td",[t._v("13.")]),t._v(" "),s("td",[t._v("toLowerCase")]),t._v(" "),s("td"),t._v(" "),s("td",[t._v("转换为小写 : String")])]),t._v(" "),s("tr",[s("td",[t._v("14.")]),t._v(" "),s("td",[t._v("toUpperCase")]),t._v(" "),s("td"),t._v(" "),s("td",[t._v("转换为大写 : String")])]),t._v(" "),s("tr",[s("td",[t._v("15.")]),t._v(" "),s("td",[t._v("split")]),t._v(" "),s("td",[t._v("[sperateString")]),t._v(" "),s("td",[t._v("sperateRegexp, limit]")])]),t._v(" "),s("tr",[s("td",[t._v("16.")]),t._v(" "),s("td",[t._v("contact")]),t._v(" "),s("td",[t._v("string2...stringN")]),t._v(" "),s("td",[t._v("N 个字符串连接后的新字符串 :String")])]),t._v(" "),s("tr",[s("td",[t._v("17.")]),t._v(" "),s("td",[t._v("startsWith")]),t._v(" "),s("td",[t._v("searchString[, searchFromIndex]")]),t._v(" "),s("td",[t._v("判断 str 从 searchFromIndex 位置向后的字符串是否以 searchString 开头的 : Boolean")])]),t._v(" "),s("tr",[s("td",[t._v("18.")]),t._v(" "),s("td",[t._v("endsWith")]),t._v(" "),s("td",[t._v("searchString[, searchTotalLength]")]),t._v(" "),s("td",[t._v("判断 str 的 searchTotalLength 长度范围内是否以 searchString 结尾的 : Boolean")])]),t._v(" "),s("tr",[s("td",[t._v("19.")]),t._v(" "),s("td",[t._v("includes")]),t._v(" "),s("td",[t._v("searchString[, fromIndex]")]),t._v(" "),s("td",[t._v("判断 str 从 searchFromIndex 位置向后的字符串是否包含 searchString : Boolean")])])])])])]),t._v(" "),s("h3",{attrs:{id:"indexof-lastindexof-search"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#indexof-lastindexof-search"}},[t._v("#")]),t._v(" indexOf,lastIndexOf,search")]),t._v(" "),s("ul",[s("li",[t._v("当没有匹配成功时，返回 -1")])]),t._v(" "),s("h3",{attrs:{id:"search-match-regexp-matchall-regexp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#search-match-regexp-matchall-regexp"}},[t._v("#")]),t._v(" search,match(regexp),matchAll(regexp)")]),t._v(" "),s("ul",[s("li",[t._v("当你想要知道字符串中是否存在某个模式（pattern）时可使用 search()，类似于正则表达式的 test() 方法。当要了解更多匹配信息时，可使用 match()（但会更慢一些），该方法类似于正则表达式的 exec() 方法。")]),t._v(" "),s("li",[t._v("match 正则表达式带全局符号时，返回数组，否则返回对象")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my name is yu xiao rou , you can call me xiao rou yu or xiao rou"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" reg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("rou")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),t._v("\nstr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("search")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//19")]),t._v("\nreg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\nstr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//["rou", index: 19, input: "my name is yu xiao rou , you can call me xiao rou yu or xiao rou", groups: undefined]')]),t._v("\nreg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//["rou", index: 19, input: "my name is yu xiao rou , you can call me xiao rou yu or xiao rou", groups: undefined]')]),t._v("\nstr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("matchAll")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//返回一个迭代器")]),t._v("\n\nstr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("match")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("rou")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ['rou','rou','rou']")]),t._v("\n")])])]),s("h3",{attrs:{id:"slice"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#slice"}},[t._v("#")]),t._v(" slice")]),t._v(" "),s("ul",[s("li",[t._v("beginIndex、endIndex < 0，则等同于 length+beginIndex，length+endIndex")]),t._v(" "),s("li",[t._v("beginIndex 省略 则为 0")]),t._v(" "),s("li",[t._v("endIndex 省略 则为 length-1")])]),t._v(" "),s("h3",{attrs:{id:"substring"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#substring"}},[t._v("#")]),t._v(" substring")]),t._v(" "),s("ul",[s("li",[t._v("startIndex、endIndex<0 转换为 0")]),t._v(" "),s("li",[t._v("starIndex、endIndex>length 转换为 length")]),t._v(" "),s("li",[t._v("startIndex 省略 转换为 0")]),t._v(" "),s("li",[t._v("endIndex 省略 转换为 length - 1")]),t._v(" "),s("li",[t._v("startIndex < endIndex 转换为 (endIndex,starIndex)")]),t._v(" "),s("li",[t._v("slice 和 substring 提取"),s("strong",[t._v("失败")]),t._v("返回"),s("strong",[t._v("空字符串")]),t._v(",不报错")])]),t._v(" "),s("h2",{attrs:{id:"字符串与数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串与数组"}},[t._v("#")]),t._v(" 字符串与数组")]),t._v(" "),s("ul",[s("li",[t._v("可以根据下标取值")]),t._v(" "),s("li",[t._v("有 length 属性")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'h'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 5")]),t._v("\n")])])]),s("h2",{attrs:{id:"考点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#考点"}},[t._v("#")]),t._v(" 考点")]),t._v(" "),s("h3",{attrs:{id:"去掉字符两边的空格"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#去掉字符两边的空格"}},[t._v("#")]),t._v(" 去掉字符两边的空格")]),t._v(" "),s("ul",[s("li",[t._v("方法一字符转数组然后过滤然后再拼接")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("filter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//中间的空格也去掉了所以还需要进化")]),t._v("\n")])])]),s("ul",[s("li",[t._v("方法二正则表达式替换")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^\\s*|\\s*$")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);