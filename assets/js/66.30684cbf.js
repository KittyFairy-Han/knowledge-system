(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{483:function(t,a,v){"use strict";v.r(a);var r=v(42),s=Object(r.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"vdom"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#vdom"}},[t._v("#")]),t._v(" vdom")]),t._v(" "),v("h2",{attrs:{id:"如何理解-vdom"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#如何理解-vdom"}},[t._v("#")]),t._v(" 如何理解 vdom")]),t._v(" "),v("ul",[v("li",[t._v("本质：用 JS 数据结构模拟真实的 DOM 结构")]),t._v(" "),v("li",[t._v("主要作用：DOM 变化的对比放在 JS 层来做，对比的核心算法：diff 算法")]),t._v(" "),v("li",[t._v("目的（优点）： DOM 操作时昂贵的，操作 JS 提高重绘性能")])]),t._v(" "),v("h2",{attrs:{id:"diff-算法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#diff-算法"}},[t._v("#")]),t._v(" diff 算法")]),t._v(" "),v("h3",{attrs:{id:"原"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#原"}},[t._v("#")]),t._v(" 原")]),t._v(" "),v("p",[t._v("树 diff 的时间复杂度是 O(N^3)，遍历过程：")]),t._v(" "),v("ul",[v("li",[t._v("遍历 tree1、tree2")]),t._v(" "),v("li",[t._v("排序\n1000 个节点，计算需要计算 1 亿次，算法不可用"),v("br")])]),t._v(" "),v("h3",{attrs:{id:"优化后"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#优化后"}},[t._v("#")]),t._v(" 优化后")]),t._v(" "),v("p",[t._v("时间复杂度 o(N)，比较的原则做了调整：")]),t._v(" "),v("ul",[v("li",[t._v("只比较同一层级")]),t._v(" "),v("li",[t._v("tag 不同，直接删掉重建，不在深度比较")]),t._v(" "),v("li",[t._v("tag 和 key 都相同，则认为是相同节点，不再深度比较")])])])}),[],!1,null,null,null);a.default=s.exports}}]);